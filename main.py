# Bot и Dispatcher это классы поэтому с большой буквы
from aiogram import Bot, Dispatcher
from aiogram.utils import executor
import os


# Функция для отображения работоспособности бота. Когда запущен будет выдавать это сообщение
# И мы можем приступать к каким то движениям
# Функция используется в executor
# async функция позволяет выполнять функцию не по порядку
# async - объявляем. await - вызываем
async def on_start(_):
    print('Бот запущен!')


# Бот главная фигура, но к нему почти никогда не обращаемся
bot = Bot(token=os.getenv('TOKEN'))  # Мы спрятали токен теперь можно спокойно бушить на гитхаб
# Диспетчер работает на бота
dp = Dispatcher(bot)

# start_polling - Долгое прослушивание постоянно кидает запрос на телеграм сервер и если что-то приходит он это
# возвращает
executor.start_polling(dp, skip_updates=True, on_startup=on_start)
# executor - исполнитель работает на dp
# skip_updates=True - Для того чтобы пока наш бот лежит в отключке Если приходят какие-то апдейты для нас их не копили
# По сути игнорит все сообщения пока бот в отключке
# ПРи запуске фраза Updates were skipped successfully. будет сигнализировать о пропуске не нужных обращений
